{"version":3,"sources":["components/Button.js","components/Header.js","components/Recipe.js","components/Search.js","components/AddRecipe.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","text","onClick","Header","title","onSearch","onAdd","showAdd","showSearch","defaultProps","Recipe","recipe","onDelete","name","style","color","cursor","id","Array","from","ingredients","length","map","el","index","React","createElement","key","Search","recipes","useState","ingredientName","setIngredient","recipeName","setSearchRecipe","isFound","includes","fontSize","paddingBottom","value","type","placeholder","onChange","e","target","onSubmit","preventDefault","document","querySelector","innerHTML","getElementById","onkeyup","find","ReactDOMServer","renderToString","Object","values","filter","val","toLowerCase","toString","console","log","AddRecipe","setName","setIngredients","removeWarning","this","ing","list","handleInputChange","App","setShowAdd","setShowSearch","setRecipes","useEffect","a","fetchRecipes","recipesFromServer","getRecipes","fetch","res","json","data","addRecipe","method","headers","body","JSON","stringify","deleteRecipe","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00221048.chunk.js","sourcesContent":["\r\n\r\nconst Button = ({className,text,onClick}) => {\r\n    return (\r\n        <div>\r\n            <button className={className} onClick={onClick}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","\r\nimport Button from \"./Button\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({title, onAdd,  showAdd,onSearch, showSearch}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1 className='title'>{title}</h1>\r\n            \r\n            {/* the app could be modified to add recipes with the bellow button */}\r\n            {/* <Button onClick={onAdd} className={showAdd ? 'btn btn-close': 'btn btn-1'} text={showAdd ? 'Close': 'Add'}/> */}\r\n            \r\n            <Button onClick={onSearch} className={showSearch ? 'btn btn-close': 'btn btn-2'} text={showSearch ? 'Close': 'Search'}/>\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps ={\r\n    title: \"Amina Recipes\"\r\n}\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired\r\n}\r\nexport default Header\r\n","import React from 'react';\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\n\r\nconst Recipe = ({recipe ,onDelete}) => {\r\n  \r\n    \r\n    //let ing  = Array.from(recipe.ingredients)\r\n\r\n    return (\r\n        <div className='recipe' >\r\n            {/* {console.log(\"inside recipe: \", recipe.ingredients)} */}\r\n         \r\n            <h3>{recipe.name} <FaTimes style={{color:'red', cursor:\"pointer\"}} onClick={() => onDelete(recipe.id)}/> </h3>\r\n           {\r\n                Array.from(recipe.ingredients)[0].length > 1 ? <ul> {Array.from(recipe.ingredients).map( (el, index) =>React.createElement('li', {key:index}, el)) } </ul> \r\n                :                   <ul> {[recipe.ingredients].map( (el, index) =>React.createElement('li', {key:index}, el)) } </ul>\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React , { useState} from \"react\"\r\nimport Recipe from \"./Recipe\"\r\nimport ReactDOMServer from 'react-dom/server';\r\n// import { SearchRounded } from \"@material-ui/icons\";\r\n\r\nconst Search = ({recipes,onDelete, showSearch}) => {\r\n\r\n    const [ingredientName, setIngredient] = useState('')\r\n    const [recipeName, setSearchRecipe] = useState('')\r\n\r\n    const searchForRecipies = (e) => {\r\n        e.preventDefault()\r\n        //remove error msg when user type needed fields\r\n        function removeWarning() {\r\n            document.getElementById(\"search_error\").innerHTML = \"\";\r\n        }\r\n        if(!recipeName){\r\n            document.querySelector(\"#search_error\").innerHTML = \"Please enter a recipe name to find\";\r\n        }\r\n        document.getElementById(\"search\").onkeyup = removeWarning;\r\n\r\n        //check if user is entering a recipe by name\r\n        if(recipeName) { \r\n            if(recipes.find(isFound)){\r\n                document.getElementById(\"found\").innerHTML =  ReactDOMServer.renderToString(<Recipe recipe = {recipes.find(isFound)} onDelete={onDelete}/>)  \r\n            }\r\n            else{\r\n                document.getElementById(\"found\").innerHTML = \"<span style='color: red'>Sorry, could not find a recipe with that name</span>\" \r\n            }\r\n        }\r\n     \r\n    }\r\n    //search for recipe by recipe name\r\n    function isFound(recipes) {\r\n        return recipes.name.includes(recipeName);\r\n    }\r\n   \r\n    //clear recipe name search field\r\n    const clear = () =>{\r\n        setSearchRecipe('')\r\n        document.getElementById(\"found\").innerHTML =  ReactDOMServer.renderToString(\"\")\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {showSearch &&\r\n            <div className='search-container'>\r\n                <h3 style={{fontSize: '20px', paddingBottom:'10px'}}>Filter recipies by ingredients</h3>\r\n                <hr />\r\n                <form className='search-form'>\r\n                    <input value={ingredientName} type=\"text\" placeholder='ex: peanut butter' onChange={e => {setIngredient(e.target.value)}}/>\r\n                </form>\r\n\r\n                <h3 style={{fontSize: '20px', paddingBottom:'10px'}}>Search for a recipe by name</h3>\r\n                <hr />\r\n                <form className='search-form' onSubmit={searchForRecipies}>\r\n                    <input value={recipeName} type=\"text\" id='search' placeholder='ex: hot chocolate' onChange={e => {setSearchRecipe(e.target.value)}}/>\r\n                    <button type='submit' ><strong>search</strong></button>\r\n                    <button type='button' onClick={clear}><strong>clear</strong></button>\r\n                </form>\r\n\r\n                <span className=\"error\"><p id=\"search_error\"></p></span>\r\n                <br></br>\r\n            </div>\r\n            }\r\n\r\n            {/* to display search results */}\r\n            <div id=\"found\"></div>\r\n            <br />\r\n            {/* {console.log(\"inside search length: \", Object.values(recipes).length)} */}\r\n\r\n            {\r\n                recipeName === \"\"  &&\r\n                Object.values(recipes).filter((value) => {\r\n\r\n                    if( ingredientName === \"\"){\r\n                        return <Recipe key={value.id} recipe = {value} onDelete={onDelete}/> \r\n                    }\r\n                    else if(value.ingredients.map(val => val.toLowerCase()).toString().includes(ingredientName.toLowerCase())){\r\n                        return [<Recipe recipe = {value} onDelete={onDelete}/> ,console.log(value)]\r\n                    }\r\n                    }).map((val , index)=>{\r\n                        return  <Recipe key={index} recipe = {val} onDelete={onDelete} />\r\n                    })\r\n                    \r\n                }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { useState } from \"react\"\r\n\r\nconst AddRecipe = ({onAdd}) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [ingredients, setIngredients] = useState([])\r\n\r\n\r\n    //remove error msg when user type needed fields\r\n    function removeWarning() {\r\n        document.getElementById(this.id + \"_error\").innerHTML = \"\";\r\n    }\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(!name){\r\n            document.querySelector(\"#name_error\").innerHTML = \"Please enter a recipe name\";\r\n       \r\n        } \r\n        if(ingredients.length === 0){\r\n            document.querySelector(\"#ingredient_error\").innerHTML = \"Please enter ingredients\";\r\n        }\r\n        //delete warning message when user starts entering fields again\r\n        document.getElementById(\"name\").onkeyup = removeWarning;\r\n        document.getElementById(\"ingredient\").onkeyup = removeWarning;\r\n\r\n        if(name && ingredients){\r\n            onAdd({name, ingredients})\r\n            setName('')\r\n            setIngredients('')\r\n        }  \r\n    }\r\n    //add more input fields\r\n    const addInput = () =>{\r\n        // e.preventDefault()\r\n        setIngredients([...ingredients,''])\r\n         \r\n    }\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        const list = [...ingredients]\r\n        list[index] = e.target.value\r\n        setIngredients(list);\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>Recipe Name</label>\r\n                <span className=\"error\"><p id=\"name_error\"></p></span>\r\n                {/* <div>{console.log(typeof(ingredients))}</div> */}\r\n                <input type='text' id='name' placeholder='ex: cheese sandwich' value={name} onChange={e => setName(e.target.value)}/>\r\n            </div>\r\n            {\r\n                [ingredients].map((ing , index) =>{\r\n                    return( \r\n                        <div className='form-control' key={index} >\r\n                            <label>Ingredients</label>\r\n                            <span className=\"error\"><p id=\"ingredient_error\"></p></span>\r\n                            <input type='text' id='ingredient' placeholder='ex: bread' value={ing} onChange={e => handleInputChange(e,index)}/>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {/* <button type='button' className='btn btn-add' onClick={() => addInput()}>add more ingredient</button>                             */}\r\n\r\n\r\n            {/* <div style={{ marginTop: 20 }}>{JSON.stringify(ingredients)}</div> */}\r\n            <input type='submit' value='Save Recipe'  className='btn btn-block'/>\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddRecipe\r\n","import React,{ useState, useEffect }  from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Search from \"./components/Search\";\r\nimport AddRecipe from \"./components/AddRecipe\";\r\n \r\n\r\n\r\nconst App = () => {\r\n\r\n  //toggle add and search buttons\r\n  // add button is not visibile as it is not required in the assessment.\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  //search button\r\n  const [showSearch, setShowSearch] = useState(false)\r\n  \r\n\r\n  // our state for recipes should be on the top level (App) bcuz we may want to use it within other components\r\n  const [recipes, setRecipes] = useState([])\r\n\r\n  //get recipes from server\r\n  useEffect(() =>{\r\n    const getRecipes = async () =>{\r\n      const recipesFromServer = await fetchRecipes()\r\n      //console.log(\"data from server: \",recipesFromServer)\r\n      setRecipes(recipesFromServer)\r\n    }\r\n    getRecipes()\r\n  }, [])\r\n\r\n\r\n  //fetch recipes\r\n  const fetchRecipes = async () =>{\r\n    try {\r\n      const res = await fetch('/api/recipe')\r\n      const data = await res.json()\r\n      //console.log(\"data:\", data)\r\n      return data\r\n      \r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n \r\n \r\n\r\n  //Add Recipe\r\n  const addRecipe = async (recipe)=>{\r\n    //console.log(recipe)\r\n    const res = await fetch(\r\n      '/api/recipe', {\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-type': 'application/json',\r\n          'Accept': 'application/json'\r\n      },\r\n        body: JSON.stringify(recipe)\r\n      })\r\n\r\n      const data = await res.json()\r\n      setRecipes([...recipes,data])\r\n  }\r\n  \r\n\r\n  //Delete a Recipe\r\n  const deleteRecipe = async (id) =>{\r\n    //console.log(`recipe ${id} deleted`)\r\n    await fetch(`/api/recipe/${id}`, {method: 'DELETE',})\r\n    setRecipes(recipes.filter((recipe) => recipe.id !== id))\r\n\r\n  }\r\n  //\r\n  \r\n  return (\r\n    <div className='container'>\r\n      <Header onAdd={() => setShowAdd(!showAdd)} showAdd={showAdd} onSearch ={() => setShowSearch(!showSearch)} showSearch={showSearch}/>\r\n      {showAdd && <AddRecipe onAdd = {addRecipe}/>}\r\n      {<Search  recipes={recipes} onDelete={deleteRecipe} showSearch={showSearch}/>}\r\n      \r\n      {recipes.length === 0 && \"No Recipes To Show\"}\r\n      <footer>\r\n         <p>copyright &copy; 2021 <a href=\"https://amna-a.github.io/\">AMINA ELTAHIR </a></p> \r\n      </footer>\r\n     </div>\r\n    \r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}